[script]
n0=on *:START: {
n1=  ; Called on script start. Read settings from ini and set cleanup timer.
n2=  SET %timeout $readini(smartfilter.ini, durations, timeout)
n3=  timerSMARTFILTERCLEANUP 0 5 cleanup
n4=}
n5=
n6=alias isIdle {
n7=  ; Determines whether the given timestamp (in settings) counts as being idle.
n8=  if ($1 == $null) {
n9=    return $true
n10=  }
n11=  elseif ($ctime > $calc($1 + %timeout)) {
n12=    return $true
n13=  }
n14=  else {
n15=    return $false
n16=  }
n17=}
n18=
n19=alias cleanup { 
n20=  ; Cleanup the used activity timestamps.
n21=  var %n = $var(lastTalk. $+ *,0), %var, %varVal
n22=  while (%n >= 1) {
n23=    %var = $gettok($var(lastTalk. $+ *,%n),2-,46)
n24=    %varVal = %lastTalk. [ $+ [ %var ] ]
n25=    if ($isIdle(%varVal)) {
n26=      UNSET -s %lastTalk. [ $+ [ %var ] ]
n27=    }
n28=    dec %n
n29=  }
n30=}
n31=
n32=on *:TEXT:*:#: {
n33=  ; Called when a nick speaks in a channel. Update the activity timestamp for
n34=  ; the given nick in the appropriate channel and network.
n35=  SET %lastTalk. [ $+ [ $network ] $+ . $+ [ $chan ] $+ . $+ [ $nick ] ] $ctime
n36=}
n37=
n38=on ^*:JOIN:#: {
n39=  ; Called when a nick joins a channel. Checks whether they were active in
n40=  ; the given channel and network, and if not, surpresses the join message.
n41=  if ($isIdle(%lastTalk. [ $+ [ $network ] $+ . $+ [ $chan ] $+ . $+ [ $nick ] ])) {
n42=    HALT
n43=  }
n44=}
n45=
n46=on ^*:PART:#: {
n47=  ; Called when a nick leaves a channel. Checks whether they were active in
n48=  ; the given channel and network, and if not, surpresses the join message.
n49=  if ($isIdle(%lastTalk. [ $+ [ $network ] $+ . $+ [ $chan ] $+ . $+ [ $nick ] ])) {
n50=    HALT
n51=  }
n52=}
n53=
n54=on ^*:QUIT: {
n55=  ; Called when a nick quits. For each common channel, checks whether they 
n56=  ; were active in the given channel and network. If so: send a (custom) 
n57=  ; quit message. Surpresses all default quit messages.
n58=  var %i = 0, %chan
n59=  while (%i < $comchan($nick,0)) {
n60=    inc %i
n61=    %chan = $comchan($nick,%i)
n62=    if (!$isIdle(%lastTalk. [ $+ [ $network ] $+ . $+ [ %chan ] $+ . $+ [ $nick ] ])) {
n63=      echo $colour(quit) %chan * $nick ( [ $+ [ $fulladdress ] $+ ] ) Quit ( [ $+ [ $1- ] $+ ] )
n64=    }
n65=  }
n66=
n67=  HALTDEF
n68=}
n69=
n70=dialog smartFilter {
n71=  ; Setup settings dialog.
n72=  title "Smart join and part filter"
n73=  size -1 -1 260 170
n74=  text "Smart join and part filter v1.0 by Beskhue. The idle timeout controls after how many seconds of idling in a specific channel joins/parts of a nick will not be shown in that channel.",1,15 15 230 50
n75=  box "Idle timeout (seconds)", 2, 15 75 230 48
n76=  edit %timeout, 3, 20 93 220 20
n77=  button "Ok", 4, 15 135 100 20, ok
n78=  button "Cancel", 5, 145 135 100 20, cancel
n79=}
n80=
n81=alias smartfilter { 
n82=  ; Show the settings dialog.
n83=  if (!$dialog(smartFilter)) { 
n84=    dialog -m smartFilter smartFilter
n85=  } 
n86=}
n87=
n88=on *:dialog:smartfilter:*:*: {
n89=  ; Called when a settings dialog event occurs.
n90=  if ($devent == init) {
n91=    ; Called on dialog initialization.
n92=    did -ra $dname 3 $iif(%timeout,%timeout,-No settings-)
n93=  }
n94=  elseif ($devent == edit) {
n95=    ; Called when the data was edited.
n96=    if($did == 3)
n97=    {
n98=      set %timeout $did(3)
n99=      writeini smartfilter.ini durations timeout %timeout
n100=    }
n101=  }
n102=}
n103=
n104=menu * {
n105=  ; Add script to the context menu.
n106=  -
n107=  Join/part Filter
n108=  .Settings: smartfilter
n109=  .-
n110=  .About: echo -at Smart join and part filter v1.0 by Beskhue. | echo -at Contact me through chat.freenode.net @ Besk. | echo -at https://github.com/Beskhue
n111=  -
n112=}

[durations]
timeout=300
